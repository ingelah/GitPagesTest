openapi: '3.0.3'
info:
  title: Involved Party Organisation
  description: Use this API to create, list, get or update Involved Parties of Organisation type. 
  version: '1.0.0'
  contact:
    name: Contractus AB #todo
    email: apisupport@contracus.se #todo
  license:
    name: 'N/A'
  
servers:
  - url: '' #todo
    description: UAT server
    x-environment: stage
  - url: '' #todo
    description: Production server
    x-environment: prod

paths:
  /:
    get:
      tags:
        - List
      summary: Returns a list of Involved Parties
      description: >
        A detailed description of the GET operation.
        Use markdown for rich text representation,
        such as **bold**, *italic*, and [links](https://swagger.io).
      parameters:
        - $ref: '#/components/parameters/Correlation-Id'
      responses:
        200:
          description: OK.
          headers: 
            'Client-Correlation-Id':
              $ref: '#/components/headers/Client-Correlation-Id'
            'API-version':
              $ref: '#/components/headers/API-version'
            'API-End-Date':
              $ref: '#/components/headers/API-End-Date'
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/InvolvedPartiesResponse'
                #todo add limition for the number of entities returned and pagination link
        400:
          $ref: '#/components/responses/400Error'
        403:
          $ref: '#/components/responses/403Error'
        404:
          $ref: '#/components/responses/404Error'
        500:
          $ref: '#/components/responses/500Error'
    post:
      tags:
        - Create
      summary: Create an Involved Party
      description: >
        A detailed description of the POST operation.
        Use markdown for rich text representation,
        such as **bold**, *italic*, and [links](https://swagger.io).
      requestBody: 
        description: 'Request body description'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvolvedParty'
      parameters:        
        - $ref: '#/components/parameters/Correlation-Id'
      responses:
        201:
          $ref: '#/components/responses/201Response'
          properties:
              $ref: '#/components/parameters/IpIdParam'
        204:
          $ref: '#/components/responses/204Response'
        400:
          $ref: '#/components/responses/400Error'
        403:
          $ref: '#/components/responses/403Error'
        404:
          $ref: '#/components/responses/404Error'
        500:
          $ref: '#/components/responses/500Error'

    patch:
      tags:
        - Update
      summary: Update an Involved Party
      description: >
        A detailed description of the PATCH operation.
        Use markdown for rich text representation,
        such as **bold**, *italic*, and [links](https://swagger.io).
      parameters:
        - $ref: '#/components/parameters/Correlation-Id'
        - $ref: '#/components/parameters/IpIdParam'
      responses:
        '200':
          description: OK
          headers: 
            'Client-Correlation-Id':
              $ref: '#/components/headers/Client-Correlation-Id'
            'API-version':
              $ref: '#/components/headers/API-version'
            'API-End-Date':
              $ref: '#/components/headers/API-End-Date'
      requestBody: 
        description: 'Request body description'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvolvedParty'

  /?ipId={ipId}:
    get:
      tags:
        - View
      summary: Returns all information about an Involved Party
      description: >
        A detailed description of the GET operation.
        Use markdown for rich text representation,
        such as **bold**, *italic*, and [links](https://swagger.io).
      parameters:
        - $ref: '#/components/parameters/Correlation-Id'
        - $ref: '#/components/parameters/IpIdParam'
      responses:
        200:
          description: Description of the GET response.
          headers: 
            'Client-Correlation-Id':
              $ref: '#/components/headers/Client-Correlation-Id'
            'API-version':
              $ref: '#/components/headers/API-version'
            'API-End-Date':
              $ref: '#/components/headers/API-End-Date'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvolvedParty'
        400:
          $ref: '#/components/responses/400Error'
        403:
          $ref: '#/components/responses/403Error'
        404:
          $ref: '#/components/responses/404Error'
        500:
          $ref: '#/components/responses/500Error'

  /ping: 
    get:
      tags:
        - Connectivity test
      summary: Endpoint that can be used to check connectivity to the API.
      description: Use this in order to verify that you can reach the API.
      parameters:        
        - $ref: '#/components/parameters/Correlation-Id'
      responses:
        200:
          description: Connection is OK.
          headers: 
            'Client-Correlation-Id':
              $ref: '#/components/headers/Client-Correlation-Id'
            'API-version':
              $ref: '#/components/headers/API-version'
            'API-End-Date':
              $ref: '#/components/headers/API-End-Date'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        400:
          $ref: '#/components/responses/400Error'
        403:
          $ref: '#/components/responses/403Error'
        404:
          $ref: '#/components/responses/404Error'
        500:
          $ref: '#/components/responses/500Error'

components:
  schemas:
    InvolvedPartiesResponse:
      type: object
      required:
        - ipId
        - fullName
      properties:
        ipId:
          type: string
          description: Unique Involved Party identifier.
          example: 067e6162-3b6f-4ae2-a171-2470b63dff00
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671
          x-column: surname
        fullName:
          type: string
          example: Hubert Blaine Wolfeschlegelsteinhausenbergerdorff Sr.
          description: Full name of an Involved Party
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671 #todo, will we use stored procedures? In that case, change to x-sp: GetIP or something like that. 
          x-column: full_name

    InvolvedParty:
      type: object
      required:
        - surname
        - firstName
        - emailAddress
        - mobilePhoneNumber
      properties:
        fullName:
          type: string
          example: Hubert Blaine Wolfeschlegelsteinhausenbergerdorff Sr.
          description: Full name of an Involved Party. Can not be updated. Contains *firstName* and *surname* concatenated. 
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671 #todo, will we use stored procedures? In that case, change to x-sp: GetIP or something like that. 
          x-column: full_name
        surname:
          type: string
          example: Wolfeschlegelsteinhausenbergerdorff Sr
          description: Surname of an Involved Party
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671
          x-column: surname
        firstName:
          type: string
          example: Hubert Blaine 
          description: First name of an Involved Party
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671
          x-column: first_name
        emailAddress:
          type: string
          format: email
          example: abc@contracus.se 
          description: E-mail address of an Involved Party
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671
          x-column: email_address
        mobilePhoneNumber:
          type: string
          example: +4670111222333 
          description: Mobile phone number of an Involved Party
          pattern: ^([0|\+[0-9]{1,5})?([0-9]{10})$
          #Contactus internal documentation section - to be removed in the external specification
          x-table: SVTWD671
          x-column: mobile_number

    PingResponse:
      type: object
      required:
        - alive
      properties:
        alive:
          type: boolean
          example: true
          description: Indication of whether the service is up and running or not.

    error:
      type: object
      title: Error
      description: An error object with error information.
      properties:
        errorCode:
          type: string
          description: An internal error code that can be used in troubleshooting or mapping to user friendly messages.
          example: '12345'
        correlationId:
          type: string
          description: An identifier that is used for troubleshooting.
          example: 067e6162-3b6f-4ae2-a171-2470b63dff00
        developerMessage:
          type: string
          description: Verbose, plain language description of the problem for the developer with hints about how to fix it.
          example: Parsing error. Phonenumber must begin with a '+' followed by country code.
        userMessage:
          type: string
          description: Message that could be presented to the user.
          example: Phonenumber is in the wrong format
        moreInformation:
          type: string
          description: Link to further information about this error.
          example: http://link.to.API.error.documentation

    ErrorObject:
      type: object
      title: ErrorObject
      properties:
        error:
          $ref: '#/components/schemas/error'

  #Reusable responses
  responses:
    400Error: # Can be referenced as '#/components/responses/400Error'
      description: Generic error code. This can mean that a required field or parameter has not been provided, the value supplied is invalid (validation error), or the combination of provided fields is invalid.
      headers: 
        'Client-Correlation-Id':
          $ref: '#/components/headers/Client-Correlation-Id'
        'API-version':
          $ref: '#/components/headers/API-version'
        'API-End-Date':
          $ref: '#/components/headers/API-End-Date'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'

    403Error: # Can be referenced as '#/components/responses/403Error'
      description: Generic code for API errors. The server understood the request but is refusing to fulfil it. Details provided in the JSON object.
      headers: 
        'Client-Correlation-Id':
          $ref: '#/components/headers/Client-Correlation-Id'
        'API-version':
          $ref: '#/components/headers/API-version'
        'API-End-Date':
          $ref: '#/components/headers/API-End-Date'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'

    404Error: # Can be referenced as '#/components/responses/404Error'
      description: The requested resource is not found.
      headers: 
        'Client-Correlation-Id':
          $ref: '#/components/headers/Client-Correlation-Id'
        'API-version':
          $ref: '#/components/headers/API-version'
        'API-End-Date':
          $ref: '#/components/headers/API-End-Date'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'

    500Error: # Can be referenced as '#/components/responses/500Error'
      description: Internal server error.
      headers: 
        'Client-Correlation-Id':
          $ref: '#/components/headers/Client-Correlation-Id'
        'API-version':
          $ref: '#/components/headers/API-version'
        'API-End-Date':
          $ref: '#/components/headers/API-End-Date'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'

    201Response: # Can be referenced as '#/components/responses/201Response'
      description: Resource created.
      headers: 
        'Client-Correlation-Id':
          $ref: '#/components/headers/Client-Correlation-Id'
        'API-version':
          $ref: '#/components/headers/API-version'
        'API-End-Date':
          $ref: '#/components/headers/API-End-Date'
        'Location':
          $ref: '#/components/headers/Location'

    204Response: # Can be referenced as '#/components/responses/204Response'
      description: No content.
      headers: 
        'Client-Correlation-Id':
          $ref: '#/components/headers/Client-Correlation-Id'
        'API-version':
          $ref: '#/components/headers/API-version'
        'API-End-Date':
          $ref: '#/components/headers/API-End-Date'

  #Reusable headers
  headers:
    Client-Correlation-Id:
      schema:
        type: string
      example: 067e6162-3b6f-4ae2-a171-2470b63dff00
      description: |
        Correlation id that is the same as the consumer set in the request (if applicable).
        If not set by the consumer, a unique value will be generated.
        Used to help with log matching during support cases.
    API-version:
      schema:
        type: string
      example: '1.3'
      description: Versioning consists of major and minor version numbers (e.g. 1.0 where “1” is the major version and “0” is the minor version number). All minor versions are backwards compatible.
    API-End-Date:
      schema:
        type: string
      example: '2029-01-31'
      description: |
        When an API (or specific version of an API) is scheduled for termination, that API shall indicate this by returning 
        a “API-End-Date” http header with the date when it will be removed. 
        This is so consumers may implement LCM logic if so desired.
    Location:
      schema:
        type: string
      example: 'https://api-test.contractus.se/.../V1/resourceName/{id}'
      description: URL to the newly created resource.

 #Reusable parameters
  parameters:
    Correlation-Id:
      name: Client-Correlation-Id
      in: header      
      schema:
        type: string
      description: Correlation id that can be set by the consumer to help with log matching during support cases and trouble shooting.
      example: 067e6162-3b6f-4ae2-a171-2470b63dff00
      required: false
    IpIdParam:   
      name: ipId
      in: query      
      schema: 
        type: "string"
        format: "guid"
      description: Unique Involved Party identifier.
      example: 067e6162-3b6f-4ae2-a171-2470b63dff00
      required: true
    